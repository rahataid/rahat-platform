name: Stage Root CI/CD
on:
  push:
    branches:
      - 'stage'
  pull_request:
    branches:
      - 'stage'
  workflow_dispatch:

env:
  CI: false
  PLATFORM_MANIFEST_FILE: 'K8s-Manifest/Rahat/AA-Stage/Argo-Rollout/platform.yaml'
  BENEFICIARY_MANIFEST_FILE: 'K8s-Manifest/Rahat/AA-Stage/Argo-Rollout/beneficiary.yaml'

jobs:
  deploy:
    name: build && push image to Docker hub
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'action') || contains(github.event.pull_request.title, 'action') || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/docker/esatya username | DOCKERHUB_USERNAME ;
            github/data/general/docker/esatya password | DOCKERHUB_TOKEN ;

      - uses: actions/setup-node@v3
        with:
          node-version: 20.10.0

      - name: install dependencies and build apps
        run: |
          npm install -g pnpm@8.14.1
          pnpm install
          npx nx reset
          pnpm prisma:generate
          pnpm build:all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # Beneficiary Image
      - name: build && push beneficiary
        id: build-push-beneficiary
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.beneficiary
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: |
            esatya/rahat-platform-beneficiary:stage
            esatya/rahat-platform-beneficiary:stage-${{ steps.vars.outputs.sha_short }}

      # Rahat Image
      - name: build && push rahat
        id: build-push-rahat
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.rahat
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: |
            esatya/rahat-platform-rahat:stage
            esatya/rahat-platform-rahat:stage-${{ steps.vars.outputs.sha_short }}
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

  update-manifest:
    name: Update Kubernetes Manifest
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/Stage-Manifest repo | MANIFEST_REPO ;
            github/data/general/Stage-Manifest ssh-key | SSH_KEY ;

      # Checkout the manifest repository using SSH
      - name: Checkout Stage Manifest Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MANIFEST_REPO }}
          ssh-key: ${{ env.SSH_KEY }}

      # Update the image tag in the manifest
      - name: Update Image Tag in Manifest
        run: |
          sed -i "s|image: esatya/rahat-platform-rahat:.*|image: esatya/rahat-platform-rahat:stage-${{ needs.deploy.outputs.sha_short }}|" ${{ env.PLATFORM_MANIFEST_FILE }}
          sed -i "s|image: esatya/rahat-platform-beneficiary:.*|image: esatya/rahat-platform-beneficiary:stage-${{ needs.deploy.outputs.sha_short }}|" ${{ env.BENEFICIARY_MANIFEST_FILE }}

      # Commit and push changes using SSH
      - name: Commit and Push Changes
        run: |
          git config user.name "sandab-rumsan"
          git config user.email "sandab@rumsan.net"
          git add ${{ env.BENEFICIARY_MANIFEST_FILE }}
          git add ${{ env.PLATFORM_MANIFEST_FILE }}
          git commit -m "runner: Update Rahat AA Stage UI image tag to aa-stage-${{ needs.deploy.outputs.sha_short }}"
          git push origin main
