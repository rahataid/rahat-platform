export const JOBS = {
  RIVER_STATIONS: {
    GET_DHM: 'aa.jobs.riverStations.getDhm',
  },
  WATER_LEVELS: {
    GET_DHM: 'aa.jobs.waterLevels.getDhm',
    GET_GLOFAS: 'aa.jobs.waterLevels.getGlofas',
  },
  TRIGGERS: {
    DEV_ONLY: 'aa.jobs.triggers.devOnly',
    GET_ALL: 'aa.jobs.triggers.getAll',
    GET_ONE: 'aa.jobs.triggers.getOne',
    ADD: 'aa.jobs.triggers.add',
    REMOVE: 'aa.jobs.triggers.remove',
    ACTIVATE: 'aa.jobs.triggers.activate',
  },
  ACTIVITIES: {
    GET_ONE: 'aa.jobs.activities.getOne',
    GET_ALL: 'aa.jobs.activities.getAll',
    GET_HAVING_COMMS: 'aa.jobs.activities.getHavingComms',
    ADD: 'aa.jobs.activities.add',
    REMOVE: 'aa.jobs.activities.remove',
    UPDATE: 'aa.jobs.activities.update',
    UPDATE_STATUS: 'aa.jobs.activities.updateStatus',
    COMMUNICATION: {
      TRIGGER: 'aa.jobs.activity.communication.trigger',
      SESSION_LOGS: 'aa.jobs.activities.communication.sessionLogs',
      RETRY_FAILED: 'aa.jobs.activities.communication.retryFailed',
      GET_STATS: 'aa.jobs.activities.communication.getStats',
    },
  },
  ACTIVITY_CATEGORIES: {
    GET_ALL: 'aa.jobs.activityCategories.getAll',
    ADD: 'aa.jobs.activityCategories.add',
    REMOVE: 'aa.jobs.activityCategories.remove',
  },
  HAZARD_TYPES: {
    GET_ALL: 'aa.jobs.hazardTypes.getAll',
  },
  PHASES: {
    GET_ONE: 'aa.jobs.phases.getOne',
    GET_ALL: 'aa.jobs.phases.getAll',
    GET_STATS: 'aa.jobs.phases.getStats',
    ADD_TRIGGERS: 'aa.jobs.phases.addTriggers',
    REVERT_PHASE: 'aa.jobs.phases.revertPhase',
  },
  STAKEHOLDERS: {
    GET_ALL: 'aa.jobs.stakeholders.getAll',
    GET_ONE: 'aa.jobs.stakeholders.getOne',
    ADD: 'aa.jobs.stakeholders.add',
    BULK_ADD: 'aa.jobs.stakeholders.bulkAdd',
    REMOVE: 'aa.jobs.stakeholders.remove',
    UPDATE: 'aa.jobs.stakeholders.update',
    GET_GROUP: 'aa.jobs.stakeholders.getGroup',
    GET_ALL_GROUPS: 'aa.jobs.stakeholders.getAllGroups',
    GET_ONE_GROUP: 'aa.jobs.stakeholders.getOneGroup',
    ADD_GROUP: 'aa.jobs.stakeholders.addGroup',
    UPDATE_GROUP: 'aa.jobs.stakeholders.updateGroup',
    DELETE_GROUP: 'aa.jobs.stakeholders.deleteGroup',
  },
  BENEFICIARY: {
    ADD_GROUP: 'aa.jobs.beneficiary.addGroup',
    RESERVE_TOKEN_TO_GROUP: 'aa.jobs.beneficiary.reserve_token_to_group',
    ASSIGN_TOKEN_TO_GROUP: 'aa.jobs.beneficiary.assign_token_to_group',
    GET_ALL_GROUPS: 'aa.jobs.beneficiary.getAllGroups',
    GET_ONE_GROUP: 'aa.jobs.beneficiary.getOneGroup',
    GET_ALL_TOKEN_RESERVATION: 'aa.jobs.beneficiary.getAllTokenReservation',
    GET_ONE_TOKEN_RESERVATION: 'aa.jobs.beneficiary.getOneTokenReservation',
    GET_RESERVATION_STATS: 'aa.jobs.beneficiary.getReservationStats',
    GET_REDEEM_INFO: 'aa.jobs.beneficiary.getRedeemInfo',
  },
  CONTRACT: {
    INCREASE_BUDGET: 'aa.jobs.contract.increaseBudget',
  },
  STATS: {
    GET_ALL: 'aa.jobs.stats.getAll',
    GET_ONE: 'aa.jobs.stats.getOne',
  },
  DAILY_MONITORING: {
    ADD: 'aa.jobs.dailyMonitoring.add',
    GET_ALL: 'aa.jobs.dailyMonitoring.getAll',
    GET_ONE: 'aa.jobs.dailyMonitoring.getOne',
    UPDATE: 'aa.jobs.dailyMonitoring.update',
    REMOVE: 'aa.jobs.dailyMonitoring.remove',
  },
  STELLAR: {
    GET_WALLET_BY_PHONE: 'aa.jobs.stellar.getWalletByPhone',
    SEND_OTP: 'aa.jobs.stellar.sendOtp',
    SEND_GROUP_OTP: 'aa.jobs.stellar.sendGroupOTP',
    SEND_ASSET_TO_VENDOR: 'aa.jobs.stellar.sendAssetToVendor',
    SEND_ASSET_WITH_ADDRESS: 'aa.jobs.stellar.sendAssetWithAddress',
    TRANSFER_TO_OFFRAMP: 'aa.jobs.stellar.transferToOfframp',
    DISBURSE: 'aa.jobs.stellar.disburse',
    ADD_ONCHAIN_TRIGGER: 'aa.jobs.stellar.addTriggerOnChain',
    CHECK_TRUSTLINE: 'aa.jobs.stellar.checkTrustline',
    CHECK_BULK_TRUSTLINE: 'aa.jobs.stellar.checkBulkTrustline',
    UPDATE_ONCHAIN_TRIGGER: 'aa.jobs.stellar.updateTriggerOnChain',
    GET_ONCHAIN_TRIGGER: 'aa.jobs.stellar.getTriggerOnChain',
    GET_STELLAR_STATS: 'aa.jobs.stellar.getStellarStats',
    GET_TRANSACTIONS: 'aa.jobs.stellar.getTransactions',
    GET_WALLET_BALANCE: 'aa.jobs.stellar.getWalletBalance',
    // Remove after test
    INTERNAL_FAUCET_TRUSTLINE: `aa.jobs.stellar.internalFaucetTrustline`,
    GET_VENDOR_STATS: 'aa.jobs.stellar.getVendorStats',
    FAUCET: 'aa.jobs.stellar.fundStellarAccount',
    GET_REDEMPTION_REQUEST: 'aa.jobs.stellar.getRedemptionRequest',
    RAHAT_FAUCET: 'aa.jobs.stellar.rahatFaucet',
  },
  PAYOUT: {
    ASSIGN_TOKEN: 'aa.jobs.payout.assignToken',
    CREATE: 'aa.jobs.payout.create',
    LIST: 'aa.jobs.payout.list',
    GET_STATS: 'aa.jobs.payout.get_stats',
    GET: 'aa.jobs.payout.get',
    UPDATE: 'aa.jobs.payout.update',
    GET_PAYMENT_PROVIDERS: 'aa.jobs.payout.getPaymentProviders',
    TRIGGER_PAYOUT: 'aa.jobs.payout.triggerPayout',
    TRIGGER_FAILED_PAYOUT_REQUEST: 'aa.jobs.payout.triggerFailedPayoutRequest',
    TRIGGER_ONE_FAILED_PAYOUT_REQUEST:
      'aa.jobs.payout.triggerOneFailedPayoutRequest',
    GET_PAYOUT_LOGS: 'aa.jobs.payout.getPayoutLogs',
    GET_PAYOUT_LOG: 'aa.jobs.payout.getPayoutLog',
    GET_PAYOUT_DETAILS: 'aa.jobs.payout.getPayoutDetails',
    EXPORT_PAYOUT_LOGS: 'aa.jobs.payout.exportPayoutLogs',
  },
  VENDOR: {
    // Remove after test
    TEST_OFFLINE_PAYOUT: 'aa.jobs.vendor.test_offline_payout',
  },
  CHAIN: {
    DISBURSE: 'jobs.chain.disburse',
    SEND_OTP: 'jobs.chain.sendOtp',
    SEND_ASSET: 'jobs.chain.sendAsset',
  },
};
